name: Release And Publish Python Package

on:
  push:
    branches:
      - "main"

permissions:
  contents: write
  packages: write

jobs:
  generate-release-body:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'chore(release)')
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Generate release body
        id: git-cliff
        uses: orhun/git-cliff-action@v4
        with:
          args: -vv --unreleased --strip all
    
  publish:
    needs: [generate-release-body]
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Set up Python
        run: uv python install
      - name: Install the project
        run: uv sync
      - name: Build and publish
        run: |
          uv build
          uv publish --trusted-publishing automatic

  release:
    runs-on: ubuntu-latest
    needs: [generate-release-body]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: QMDown*
          merge-multiple: true
      - name: Get version
        run: echo "PACKAGE_VERSION=$(grep '__version__' QMDown/__init__.py | awk -F'\"' '{print $2}')" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ needs.generate-release-body.outputs.release_body }}
          tag_name: v${{ env.PACKAGE_VERSION }}
